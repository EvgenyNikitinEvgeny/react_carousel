{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemIndex","handleSwipeNext","step","props","images","frameSize","lastIndex","length","nextInd","setState","handleSwipePrev","lastInd","this","itemWidth","animationDuration","infinity","prevDisabled","nextDisabled","className","style","width","transition","map","image","ind","transform","src","alt","type","disabled","onClick","React","Component","App","setWidth","event","target","value","setFrameSize","setStep","setAnimationDuration","setInfinity","checked","htmlFor","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"uPAgBaA,EAAb,4MACEC,MAAyB,CACvBC,UAAW,GAFf,EAKEC,gBAAkB,SAACC,GACjB,MAA8B,EAAKC,MAA3BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACRL,EAAc,EAAKD,MAAnBC,UAEFM,EAAYF,EAAOG,OAASF,EAC9BG,EAAUR,EAAYE,EAEtBF,IAAcM,EAChBE,EALiB,EAMRA,EAAUF,IACnBE,EAAUF,GAGZ,EAAKG,UAAS,iBAAO,CACnBT,UAAWQ,OAnBjB,EAuBEE,gBAAkB,SAACR,GACjB,MAA8B,EAAKC,MAA3BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACRL,EAAc,EAAKD,MAAnBC,UAEFW,EAAUP,EAAOG,OAASF,EAC5BG,EAAUR,EAAYE,EAFT,IAIbF,EACFQ,EAAUG,EACDH,EANM,IAOfA,EAPe,GAUjB,EAAKC,UAAS,iBAAO,CACnBT,UAAWQ,OArCjB,4CAyCE,WAAU,IAAD,OACP,EAOII,KAAKT,MANPC,EADF,EACEA,OACAF,EAFF,EAEEA,KACAW,EAHF,EAGEA,UACAR,EAJF,EAIEA,UACAS,EALF,EAKEA,kBACAC,EANF,EAMEA,SAGMf,EAAcY,KAAKb,MAAnBC,UACFgB,EAAgBhB,GAAa,IAAOe,EACpCE,EAAgBjB,GAAaI,EAAOG,OAASF,IAAeU,EAElE,OACE,sBACEG,UAAU,WACVC,MAAO,CACLC,MAAM,GAAD,OAAKf,EAAYQ,EAAjB,MACLQ,WAAW,GAAD,OAAKP,EAAL,OAJd,UAOE,oBAAII,UAAU,iBAAd,SAEId,EAAOkB,KAAI,SAACC,EAAOC,GACjB,OACE,oBAEEN,UAAU,iBACVC,MAAO,CACLM,UAAU,cAAD,QAAiBzB,EAAYa,EAA7B,OACTQ,WAAW,GAAD,OAAKP,EAAL,OALd,SAQE,qBACEY,IAAKH,EACLI,IAAG,UAAKH,EAAM,GACdJ,MAAOP,KAVJU,QAkBf,sBAAKL,UAAU,oBAAf,UACE,wBACEU,KAAK,SACLV,UAAU,mBACVW,SAAUb,EACVc,QAAS,kBAAO,EAAKpB,iBAAiBR,IAJxC,oBASA,wBACE0B,KAAK,SACLV,UAAU,mBACVW,SAAUZ,EACVa,QAAS,kBAAO,EAAK7B,gBAAgBC,IACrC,UAAQ,OALV,8BAhGV,GAA8B6B,IAAMC,WCHvBC,EAAb,4MACElC,MAAQ,CACNK,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFS,UAAW,IACXR,UAAW,EACXH,KAAM,EACNY,kBAAmB,IACnBC,UAAU,GAlBd,EAqBEmB,SAAW,SAACC,GACV,EAAK1B,SAAS,CACZI,WAAYsB,EAAMC,OAAOC,SAvB/B,EA2BEC,aAAe,SAACH,GACd,EAAK1B,SAAS,CACZJ,WAAY8B,EAAMC,OAAOC,SA7B/B,EAiCEE,QAAU,SAACJ,GACT,EAAK1B,SAAS,CACZP,MAAOiC,EAAMC,OAAOC,SAnC1B,EAuCEG,qBAAuB,SAACL,GACtB,EAAK1B,SAAS,CACZK,mBAAoBqB,EAAMC,OAAOC,SAzCvC,EA6CEI,YAAc,SAACN,GACb,EAAK1B,SAAS,CACZM,SAAUoB,EAAMC,OAAOM,WA/C7B,4CAmDE,WACE,MAOI9B,KAAKb,MANPK,EADF,EACEA,OACAS,EAFF,EAEEA,UACAR,EAHF,EAGEA,UACAH,EAJF,EAIEA,KACAY,EALF,EAKEA,kBACAC,EANF,EAMEA,SAGF,OACE,sBAAKG,UAAU,MAAf,UAEA,qBAAI,UAAQ,QAAZ,2BAAmCd,EAAOG,OAA1C,aAEE,cAAC,EAAD,CACEH,OAAQA,EACRS,UAAWA,EACXR,UAAWA,EACXH,KAAMA,EACNY,kBAAmBA,EACnBC,SAAUA,IAGZ,wBACE4B,QAAQ,SACRzB,UAAU,QAFZ,wBAKE,uBACEU,KAAK,SACLgB,GAAG,SACHP,MAAOxB,EACPgC,IAAK,IACLC,IAAK,IACL5C,KAAM,GACN6C,SAAUnC,KAAKsB,cAInB,wBACES,QAAQ,UACRzB,UAAU,QAFZ,wBAKE,uBACEU,KAAK,SACLgB,GAAG,UACHP,MAAOhC,EACPwC,IAAK,EACLC,IAAK1C,EAAOG,OACZL,KAAM,EACN6C,SAAUnC,KAAK0B,kBAInB,wBACEK,QAAQ,SACRzB,UAAU,QAFZ,kBAKE,uBACEU,KAAK,SACLgB,GAAG,SACHP,MAAOnC,EACP2C,IAAK,EACLC,IAAK1C,EAAOG,OACZL,KAAM,EACN6C,SAAUnC,KAAK2B,aAInB,wBACEI,QAAQ,cACRzB,UAAU,QAFZ,+BAKE,uBACEU,KAAK,SACLgB,GAAG,cACHP,MAAOvB,EACP+B,IAAK,IACLC,IAAK,IACL5C,KAAM,IACN6C,SAAUnC,KAAK4B,0BAGnB,wBACEG,QAAQ,aACRzB,UAAU,QAFZ,sBAKE,uBACEU,KAAK,WACLgB,GAAG,aACHG,SAAUnC,KAAK6B,wBAlJ3B,GAAyBV,IAAMC,WCV/BgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.18647e5a.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinity: boolean,\n};\n\ntype State = {\n  itemIndex: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    itemIndex: 0,\n  };\n\n  handleSwipeNext = (step: number) => {\n    const { images, frameSize } = this.props;\n    const { itemIndex } = this.state;\n    const firstIndex = 0;\n    const lastIndex = images.length - frameSize;\n    let nextInd = itemIndex + step;\n\n    if (itemIndex === lastIndex) {\n      nextInd = firstIndex;\n    } else if (nextInd > lastIndex) {\n      nextInd = lastIndex;\n    }\n\n    this.setState(() => ({\n      itemIndex: nextInd,\n    }));\n  };\n\n  handleSwipePrev = (step: number) => {\n    const { images, frameSize } = this.props;\n    const { itemIndex } = this.state;\n    const firstInd = 0;\n    const lastInd = images.length - frameSize;\n    let nextInd = itemIndex + step;\n\n    if (itemIndex === firstInd) {\n      nextInd = lastInd;\n    } else if (nextInd < firstInd) {\n      nextInd = firstInd;\n    }\n\n    this.setState(() => ({\n      itemIndex: nextInd,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { itemIndex } = this.state;\n    const prevDisabled = (itemIndex <= 0) && !infinity;\n    const nextDisabled = (itemIndex >= images.length - frameSize) && !infinity;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {\n            images.map((image, ind) => {\n              return (\n                <li\n                  key={image}\n                  className=\"Carousel__item\"\n                  style={{\n                    transform: `translateX(${-itemIndex * itemWidth}px)`,\n                    transition: `${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    src={image}\n                    alt={`${ind + 1}`}\n                    width={itemWidth}\n                  />\n                </li>\n              );\n            })\n          }\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={prevDisabled}\n            onClick={() => (this.handleSwipePrev(-step))}\n          >\n            &#8678;\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={nextDisabled}\n            onClick={() => (this.handleSwipeNext(step))}\n            data-cy=\"next\"\n          >\n            &#8680;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  setWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: +event.target.value,\n    });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: +event.target.value,\n    });\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: +event.target.value,\n    });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: +event.target.value,\n    });\n  };\n\n  setInfinity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      infinity: event.target.checked,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n\n        <label\n          htmlFor=\"itemId\"\n          className=\"label\"\n        >\n          Item Width:\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={this.setWidth}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameId\"\n          className=\"label\"\n        >\n          Frame Size:\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setFrameSize}\n          />\n        </label>\n\n        <label\n          htmlFor=\"stepId\"\n          className=\"label\"\n        >\n          Step:\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setStep}\n          />\n        </label>\n\n        <label\n          htmlFor=\"animationId\"\n          className=\"label\"\n        >\n          AnimationDuration:\n          <input\n            type=\"number\"\n            id=\"animationId\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={this.setAnimationDuration}\n          />\n        </label>\n        <label\n          htmlFor=\"infinityId\"\n          className=\"label\"\n        >\n          Infinite:\n          <input\n            type=\"checkbox\"\n            id=\"infinityId\"\n            onChange={this.setInfinity}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}